/*
 * class CompraProductos               version 1.0
 * Fecha de creación: 17/01/2021       Fecha de Última modificación: 09/02/2021
 *
 * Copyright (c) Desarrollo de Aplicaciones Multiplataforma, 2020
 * Módulo: DISEÑO DE INTERFACES        Unidad de Trabajo IV
 */
package u04_usabilidad01;

import java.awt.Image;
import java.awt.KeyboardFocusManager;
import static java.awt.PageAttributes.MediaType.A;
import java.awt.event.KeyEvent;
import java.text.Normalizer;
import java.util.Arrays;
import java.util.regex.Pattern;
import static javafx.scene.input.KeyCode.Z;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sun.invoke.empty.Empty;

/**
 * Interface para compra de artículos
 * @author David Jiménez Riscardo
 */
public class CompraProductos extends javax.swing.JDialog {

    /**
     * Creates new form CompraProductos
     */
    public CompraProductos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        ImageIcon imagen=new ImageIcon("img/EJ01_02.jpg");
        Icon icono = new ImageIcon(imagen.getImage().getScaledInstance(lblImagen.getWidth(), lblImagen.getHeight(), Image.SCALE_DEFAULT));
        lblImagen.setIcon(icono);
        this.repaint();      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbArticulos = new javax.swing.JComboBox<>();
        lblImagen = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtProductos = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        spnCantidad = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellido1 = new javax.swing.JTextField();
        txtApellido2 = new javax.swing.JTextField();
        txtCalle = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtCP = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtLocalidad = new javax.swing.JTextField();
        btnAceptar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        cbMostrarImagenesMenu = new javax.swing.JCheckBoxMenuItem();
        cbGuardar = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cbArticulos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adorno de Papá Noel", "Muñeco de nieve", "Campanas navideñas", "Árbol de navidad" }));
        cbArticulos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbArticulosItemStateChanged(evt);
            }
        });
        cbArticulos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbArticulosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbArticulosFocusLost(evt);
            }
        });

        lblImagen.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        jtProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PRODUCTO", "CANTIDAD", "PRECIO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtProductos.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane1.setViewportView(jtProductos);

        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        spnCantidad.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel2.setText("Cliente#:");

        jLabel3.setText("Nombre:");

        jLabel4.setText("1er. Apellido:");

        jLabel5.setText("2do. Apellido:");

        jLabel6.setText("Calle:");

        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        txtApellido1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtApellido1FocusGained(evt);
            }
        });
        txtApellido1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellido1KeyTyped(evt);
            }
        });

        txtApellido2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtApellido2FocusGained(evt);
            }
        });
        txtApellido2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellido2KeyTyped(evt);
            }
        });

        txtCalle.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCalleFocusGained(evt);
            }
        });
        txtCalle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCalleKeyTyped(evt);
            }
        });

        jLabel7.setText("Número:");

        txtNumero.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumeroFocusGained(evt);
            }
        });
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroKeyTyped(evt);
            }
        });

        jLabel8.setText("CP:");

        txtCP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCPKeyTyped(evt);
            }
        });

        jLabel9.setText("Localidad:");

        txtLocalidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLocalidadFocusLost(evt);
            }
        });
        txtLocalidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLocalidadKeyTyped(evt);
            }
        });

        btnAceptar.setText("ACEPTAR");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar Producto/s");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jMenu1.setText("Acciones");

        cbMostrarImagenesMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        cbMostrarImagenesMenu.setSelected(true);
        cbMostrarImagenesMenu.setText("Mostrar imágenes");
        cbMostrarImagenesMenu.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbMostrarImagenesMenuItemStateChanged(evt);
            }
        });
        cbMostrarImagenesMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMostrarImagenesMenuActionPerformed(evt);
            }
        });
        jMenu1.add(cbMostrarImagenesMenu);

        cbGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        cbGuardar.setText("Guardar");
        cbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGuardarActionPerformed(evt);
            }
        });
        jMenu1.add(cbGuardar);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Salir");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButtonEliminar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(spnCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cbArticulos, 0, 239, Short.MAX_VALUE)
                                .addComponent(lblImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodigo))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCalle))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCP)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(txtApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txtLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lblImagen, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbArticulos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbMostrarImagenesMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMostrarImagenesMenuActionPerformed
        
        ImageIcon imagen=new ImageIcon();
        Icon icono;
        
        if (!this.cbMostrarImagenesMenu.getState()){
            imagen=new ImageIcon("img/EJ01_01.jpg");
            icono=new ImageIcon(imagen.getImage().getScaledInstance(lblImagen.getWidth(), lblImagen.getHeight(), Image.SCALE_DEFAULT));
            lblImagen.setIcon(icono);
            this.repaint();      
        }
        else{ 
            switch(cbArticulos.getSelectedIndex()){
                case 0:
                    imagen=new ImageIcon("img/EJ01_02.jpg");
                    break;
                case 1:
                    imagen=new ImageIcon("img/EJ01_03.jpg");
                    break;
                case 2:
                    imagen=new ImageIcon("img/EJ01_04.jpg");
                    break;
                case 3:
                    imagen=new ImageIcon("img/EJ01_05.jpg");
                    break;
            }
            icono=new ImageIcon(imagen.getImage().getScaledInstance(lblImagen.getWidth(), lblImagen.getHeight(), Image.SCALE_DEFAULT));
            lblImagen.setIcon(icono);
            this.repaint();
        }
    }//GEN-LAST:event_cbMostrarImagenesMenuActionPerformed

    private void cbArticulosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbArticulosItemStateChanged
        ImageIcon imagen=new ImageIcon();
        switch(cbArticulos.getSelectedIndex()){
            case 0:
                imagen=new ImageIcon("img/EJ01_02.jpg");
                break;
            case 1:
                imagen=new ImageIcon("img/EJ01_03.jpg");
                break;
            case 2:
                imagen=new ImageIcon("img/EJ01_04.jpg");
                break;
            case 3:
                imagen=new ImageIcon("img/EJ01_05.jpg");
                break;
        }
        Icon icono = new ImageIcon(imagen.getImage().getScaledInstance(lblImagen.getWidth(), lblImagen.getHeight(), Image.SCALE_DEFAULT));
        lblImagen.setIcon(icono);
        this.repaint();      
    }//GEN-LAST:event_cbArticulosItemStateChanged

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        DefaultTableModel dtm=(DefaultTableModel) jtProductos.getModel();
        switch(cbArticulos.getSelectedIndex()){
            case 0:
                dtm.addRow(new Object[]{"Adorno de Papá Noel", spnCantidad.getValue(), "2.25"});
                break;
            case 1:
                dtm.addRow(new Object[]{"Muñeco de nieve", spnCantidad.getValue(), "1.10"});
                break;
            case 2:
                dtm.addRow(new Object[]{"Campanas navideñas", spnCantidad.getValue(), "1.99"});
                break;
            case 3:
                dtm.addRow(new Object[]{"Árbol de Navidad", spnCantidad.getValue(), "15.50"});
                break;
        }
        JOptionPane.showMessageDialog(null,"Artículo agregado.");
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void cbMostrarImagenesMenuItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbMostrarImagenesMenuItemStateChanged
        
    }//GEN-LAST:event_cbMostrarImagenesMenuItemStateChanged

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        String errores="";
        String codigo=txtCodigo.getText().toUpperCase();
        String nombre=txtNombre.getText().toUpperCase();
        String apellido1=txtApellido1.getText().toUpperCase();
        String apellido2=txtApellido2.getText().toUpperCase();
        String numero=txtNumero.getText().toUpperCase();
        String calle=txtCalle.getText().toUpperCase();
        String cp=txtCP.getText().toUpperCase();
        String localidad=txtLocalidad.getText().toUpperCase();
        
        if (!codigo.matches("\\d*") || codigo.isEmpty()) errores+="\n-El código de cliente debe de ser un número de un máximo de 9 cifras.";
        if (!nombre.matches("[A-Z]*[\\s[A-Z]*]*") || nombre.isEmpty()) errores+="\n-El nombre del cliente debe de contener caracteres alfabéticos hasta un máximo de 50.";
        if (!apellido1.matches("[A-Z]*[\\s[A-Z]*]*") || apellido1.isEmpty()) errores+="\n-El primer apellido del cliente debe de contener caracteres alfabéticos hasta un máximo de 50.";
        if (!apellido2.matches("[A-Z]*[\\s[A-Z]*]*") || apellido2.isEmpty()) errores+="\n-El segundo apellido del cliente debe de contener caracteres alfabéticos hasta un máximo de 50.";
        if (!calle.matches("[A-Z0-9]*[\\s[A-Z0-9]*]*") || calle.isEmpty()) errores+="\n-La calle debe contener caracteres alfanuméricos hasta un máximo de 150.";
        if (!numero.matches("[0-9]*") || numero.isEmpty()) errores+="\n-El número de la vivienda debe de ser un número de máximo 4 cifras.";
        if (!cp.matches("[0-9]*") || cp.isEmpty()) errores+="\n-El código postal debe de ser un número de máximo 5 cifras.";
        if (!localidad.matches("[A-Z]*[\\s[A-Z]*]*") || localidad.isEmpty()) errores+="\n-La localidad debe de contener caracteres alfabéticos hasta un máximo de 150.";
        
        if(errores.isEmpty()){
            
            if(jtProductos.getRowCount()==0){
                JOptionPane.showMessageDialog(rootPane, "Debe de agregar algún artículo");
            }else {
                JOptionPane.showMessageDialog(rootPane, "Datos Guardados correctamente");
                System.exit(0);
            }           
        }else{
            System.out.println("Errores: " + errores);
            JOptionPane.showMessageDialog(null,errores);
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        JOptionPane.showMessageDialog(null, "¡Adiós!");
        System.exit(0);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        
        int max_caracteres = 9;
        
        char c = evt.getKeyChar();
        
        if(txtCodigo.getText().length() >= max_caracteres ) {
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Máximo 9 caracteres numéricos", "Código de cliente", JOptionPane.INFORMATION_MESSAGE);
            //Paso el foco al siguiente textfield
            txtCodigo.transferFocus();
            
        }else if (Character.isDigit(c)){
            //No hacemos nada,
        }else { //Es un caracter no numérico
            
            if (!Character.isJavaIdentifierPart(c) || Character.isLetter(c) ) {

                evt.consume();
                JOptionPane.showMessageDialog(rootPane, "Sólo carácteres numéricos.", "Código de cliente", JOptionPane.INFORMATION_MESSAGE);
            }          
        }
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        
        int max_caracteres = 50;
        
        char c = evt.getKeyChar();
        
        if(txtNombre.getText().length() >= max_caracteres) {
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Máximo 50 caracteres alfabéticos.", "Nombre del cliente", JOptionPane.INFORMATION_MESSAGE);
            //Paso el foco al siguiente textfield
            txtNombre.transferFocus();
        
        }else if (Character.isLetter(c) || Character.isSpaceChar(c)){
            //No hacemos nada
        }else { //Es un caracter diferente a una letra
            
            if (!Character.isJavaIdentifierPart(c) || Character.isDigit(c) ) {

                evt.consume();
                JOptionPane.showMessageDialog(rootPane, "Sólo carácteres alfabéticos.", "Nombre del cliente", JOptionPane.INFORMATION_MESSAGE);
            }         
            
        }      
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtApellido1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellido1KeyTyped

        int max_caracteres = 50;
        
        char c = evt.getKeyChar();
        
        if(txtApellido1.getText().length() >= max_caracteres) {
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Máximo 50 caracteres alfabéticos.", "Primer apellido del cliente", JOptionPane.INFORMATION_MESSAGE);
            //Paso el foco al siguiente textfield
            txtApellido1.transferFocus();
        
        }else if (Character.isLetter(c) || Character.isSpaceChar(c)){
            //No hacemos nada
        }else { //Es un caracter diferente a una letra
            
            if (!Character.isJavaIdentifierPart(c) || Character.isDigit(c) ) {

                evt.consume();
                JOptionPane.showMessageDialog(rootPane, "Sólo carácteres alfabéticos.", "Primer apellido del cliente", JOptionPane.INFORMATION_MESSAGE);
            }         
            
        }      
    }//GEN-LAST:event_txtApellido1KeyTyped

    private void txtApellido2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellido2KeyTyped
        
        int max_caracteres = 50;
        
        char c = evt.getKeyChar();
        
        if(txtApellido2.getText().length() >= max_caracteres) {
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Máximo 50 caracteres alfabéticos.", "Segundo apellido del cliente", JOptionPane.INFORMATION_MESSAGE);
            //Paso el foco al siguiente textfield
            txtApellido2.transferFocus();
        
        }else if (Character.isLetter(c) || Character.isSpaceChar(c)){
            //No hacemos nada
        }else { //Es un caracter diferente a una letra
            
            if (!Character.isJavaIdentifierPart(c) || Character.isDigit(c) ) {

                evt.consume();
                JOptionPane.showMessageDialog(rootPane, "Sólo carácteres alfabéticos.", "Segundo apellido del cliente", JOptionPane.INFORMATION_MESSAGE);
            }         
            
        }      
    }//GEN-LAST:event_txtApellido2KeyTyped

    private void txtCalleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCalleKeyTyped
        
        int max_caracteres = 150;
        
        char c = evt.getKeyChar();
        
        if(txtCalle.getText().length() >= max_caracteres) {
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Máximo 150 caracteres alfanuméricos", "Dirección del cliente", JOptionPane.INFORMATION_MESSAGE);
            //Paso el foco al siguiente textfield
            txtCalle.transferFocus();
        
        }else if (Character.isLetterOrDigit(c) || Character.isSpaceChar(c)){
            //No hacemos nada
        }else { //Es un caracter diferente a una letra
            
            if (!Character.isJavaIdentifierPart(c)) {

                evt.consume();
                JOptionPane.showMessageDialog(rootPane, "Sólo carácteres alfanuméricos.", "Dirección del cliente", JOptionPane.INFORMATION_MESSAGE);
            }      
            
        }      
    }//GEN-LAST:event_txtCalleKeyTyped

    private void txtNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyTyped
        
        int max_caracteres = 4;
        
        char c = evt.getKeyChar();
        
        if(txtNumero.getText().length() >= max_caracteres ) {
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Máximo 4 caracteres numéricos", "Número de la vivienda", JOptionPane.INFORMATION_MESSAGE);
            //Paso el foco al siguiente textfield
            txtNumero.transferFocus();
            
        }else if (Character.isDigit(c)){
            //No hacemos nada,
        }else { //Es un caracter no numérico
            
            if (!Character.isJavaIdentifierPart(c) || Character.isLetter(c) ) {

                evt.consume();
                JOptionPane.showMessageDialog(rootPane, "Sólo carácteres numéricos.", "Número de la vivienda", JOptionPane.INFORMATION_MESSAGE);
            }          
        }
    }//GEN-LAST:event_txtNumeroKeyTyped

    private void txtCPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCPKeyTyped
        
        int max_caracteres = 5;
        
        char c = evt.getKeyChar();
        
        if(txtCP.getText().length() >= max_caracteres ) {
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Máximo 5 caracteres numéricos", "Código postal", JOptionPane.INFORMATION_MESSAGE);
            //Paso el foco al siguiente textfield
            txtCP.transferFocus();
            
        }else if (Character.isDigit(c)){
            //No hacemos nada,
        }else { //Es un caracter no numérico
            
            if (!Character.isJavaIdentifierPart(c) || Character.isLetter(c) ) {

                evt.consume();
                JOptionPane.showMessageDialog(rootPane, "Sólo carácteres numéricos.", "Código postal", JOptionPane.INFORMATION_MESSAGE);
            }          
        }
    }//GEN-LAST:event_txtCPKeyTyped

    private void txtLocalidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLocalidadKeyTyped
        
        int max_caracteres = 150;
        
        char c = evt.getKeyChar();
        
        if(txtLocalidad.getText().length() >= max_caracteres) {
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Máximo 150 caracteres alfabéticos.", "Localidad del cliente", JOptionPane.INFORMATION_MESSAGE);
            //Paso el foco al siguiente textfield
            //txtLocalidad.transferFocus();
        
        }else if (Character.isLetter(c) || Character.isSpaceChar(c)){
            //No hacemos nada          
        }else { //Es un caracter diferente a una letra
            
            if (!Character.isJavaIdentifierPart(c) || Character.isDigit(c) || c == '$' || c == '_') {

                evt.consume();   
                JOptionPane.showMessageDialog(rootPane, "Sólo carácteres alfabéticos.", "Localidad del cliente", JOptionPane.INFORMATION_MESSAGE);
                txtLocalidad.requestFocus();
            }    
            
           
        }      
    }//GEN-LAST:event_txtLocalidadKeyTyped

    private void txtLocalidadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLocalidadFocusLost
        cbArticulos.requestFocus();
    }//GEN-LAST:event_txtLocalidadFocusLost

    private void cbArticulosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbArticulosFocusLost
        spnCantidad.requestFocus();
        
    }//GEN-LAST:event_cbArticulosFocusLost

    private void txtApellido1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellido1FocusGained
        //Al ganar el foco quitamos los acentos del nombre
        String nombreSinAcentos  = Normalizer.normalize(txtNombre.getText(), Normalizer.Form.NFD);
        nombreSinAcentos = nombreSinAcentos.replaceAll("[\\p{InCombiningDiacriticalMarks}]", "");
        txtNombre.setText(nombreSinAcentos);
    }//GEN-LAST:event_txtApellido1FocusGained

    private void txtApellido2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellido2FocusGained
        //Al ganar el foco quitamos los acentos del primer apellido
        String apellido1SinAcentos  = Normalizer.normalize(txtApellido1.getText(), Normalizer.Form.NFD);
        apellido1SinAcentos = apellido1SinAcentos.replaceAll("[\\p{InCombiningDiacriticalMarks}]", "");
        txtApellido1.setText(apellido1SinAcentos);
    }//GEN-LAST:event_txtApellido2FocusGained

    private void txtCalleFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCalleFocusGained
        //Al ganar el foco quitamos los acentos del segundo apellido
        String apellido2SinAcentos  = Normalizer.normalize(txtApellido2.getText(), Normalizer.Form.NFD);
        apellido2SinAcentos = apellido2SinAcentos.replaceAll("[\\p{InCombiningDiacriticalMarks}]", "");
        txtApellido2.setText(apellido2SinAcentos);
    }//GEN-LAST:event_txtCalleFocusGained

    private void txtNumeroFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroFocusGained
        //Al ganar el foco quitamos los acentos de la calle
        String calleSinAcentos  = Normalizer.normalize(txtCalle.getText(), Normalizer.Form.NFD);
        calleSinAcentos = calleSinAcentos.replaceAll("[\\p{InCombiningDiacriticalMarks}]", "");
        txtCalle.setText(calleSinAcentos);
    }//GEN-LAST:event_txtNumeroFocusGained

    private void cbArticulosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbArticulosFocusGained
        //Al ganar el foco quitamos los acentos de la localidad
        String localidadSinAcentos  = Normalizer.normalize(txtLocalidad.getText(), Normalizer.Form.NFD);
        localidadSinAcentos = localidadSinAcentos.replaceAll("[\\p{InCombiningDiacriticalMarks}]", "");
        txtLocalidad.setText(localidadSinAcentos);
    }//GEN-LAST:event_cbArticulosFocusGained

    private void cbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGuardarActionPerformed
        btnAceptarActionPerformed(evt);
    }//GEN-LAST:event_cbGuardarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        
        //NOTA MUY IMPORTANTE: en el componente JTable debemos de modificar dos propiedades:
        //    rowSelectionAllowed: true
        //    selectionModel:Selección de múltiples intervalos
        //De esta forma permitiremos guardar varios índices que hacen referencia a las filas seleccionadas, es decir la función getSelectedRows devolverá 
        //todos los índices de las filas seleccionadas
        //Por defecto, sin modificar las dos propiedades, getSelectedRows devolverá sólo el indice de la última fila seleccionada.
        DefaultTableModel dtm=(DefaultTableModel) jtProductos.getModel();
        
        int num_filas = jtProductos.getSelectedRowCount();
        
        if( num_filas > 0 ){
            
            //Guardamos las filas marcadas en un vector y las ordenamos en orden ascendente
            int [] array_indices=jtProductos.getSelectedRows();
            Arrays.sort(array_indices); 
            //System.out.printf("array_indices[] : %s", Arrays.toString(array_indices));
                        
            // Recorremos el array filas (ya ordenado) empezando por el último y eliminamos
            for (int i=array_indices.length-1; i>=0; i--) {
               dtm.removeRow(array_indices[i]);
            } 

            jtProductos.getSelectionModel().clearSelection();
            
        }else {
   
            JOptionPane.showMessageDialog(rootPane, "Debe de seleccionar algún registro en la tabla", "Mensaje de información", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompraProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompraProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompraProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompraProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CompraProductos dialog = new CompraProductos(new javax.swing.JFrame(), true);
   
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JComboBox<String> cbArticulos;
    private javax.swing.JMenuItem cbGuardar;
    private javax.swing.JCheckBoxMenuItem cbMostrarImagenesMenu;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtProductos;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JSpinner spnCantidad;
    private javax.swing.JTextField txtApellido1;
    private javax.swing.JTextField txtApellido2;
    private javax.swing.JTextField txtCP;
    private javax.swing.JTextField txtCalle;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtLocalidad;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumero;
    // End of variables declaration//GEN-END:variables
}
